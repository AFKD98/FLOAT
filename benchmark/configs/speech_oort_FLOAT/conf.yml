# Configuration file of FAR training experiment

# ========== Cluster configuration ========== 
# ip address of the parameter server (need 1 GPU process)
ps_ip: wanda3
# ip address of each worker:# of available gpus process on each gpu in this node
# Note that if we collocate ps and worker on same GPU, then we need to decrease this number of available processes on that GPU by 1
# E.g., master node has 4 available processes, then 1 for the ps, and worker should be set to: worker:3
# worker_ips: 
#     - 10.0.0.3:[5] # worker_ip: [(# processes on gpu) for gpu in available_gpus]
#     - 10.0.0.4:[5]
#     - 10.0.0.5:[5]
#     - 10.0.0.6:[5]
#     - 10.0.0.7:[5]
#     - 10.0.0.8:[5]
#     - 10.0.0.9:[4]
#     - 10.0.0.10:[4]
#     - 10.0.0.11:[4]
#     - 10.0.0.12:[4]
#     - 10.0.0.13:[4]
worker_ips:
    - wanda3:[1]

exp_path: $FEDSCALE_HOME/fedscale/cloud

# Entry function of executor and aggregator under $exp_path
executor_entry: execution/executor.py

aggregator_entry: aggregation/aggregator_float.py

auth:
    ssh_user: ""
    ssh_private_key: ~/.ssh/id_rsa

# cmd to run before we can indeed run FAR (in order)
setup_commands:
    - source $HOME/anaconda3/bin/activate fedscale    
    # - export NCCL_SOCKET_IFNAME='enp94s0f0'         # Run "ifconfig" to ensure the right NIC for nccl if you have multiple NICs

# ========== Additional job configuration ========== 
# Default parameters are specified in config_parser.py, wherein more description of the parameter can be found

job_conf: 
    - job_name: google_speech                   # Generate logs under this folder: log_path/job_name/time_stamp
    - log_path: $FEDSCALE_HOME/benchmark # Path of log files
    - task: speech
    - num_participants: 30                      # Number of participants per round, we use K=100 in our paper, large K will be much slower
    - data_set: google_speech                     # Dataset: openImg, google_speech, stackoverflow
    - data_dir: $FEDSCALE_HOME/benchmark/dataset/data/google_speech    # Path of the dataset
    - data_map_file: $FEDSCALE_HOME/benchmark/dataset/data/google_speech/client_data_mapping/train.csv              # Allocation of data to each client, turn to iid setting if not provided
    - device_conf_file: $FEDSCALE_HOME/benchmark/dataset/data/device_info/client_device_capacity     # Path of the client trace
    - device_avail_file: $FEDSCALE_HOME/benchmark/dataset/data/device_info/client_behave_trace
    - model: resnet34                            # Models: e.g., shufflenet_v2_x2_0, mobilenet_v2, resnet34, albert-base-v2
    - gradient_policy: yogi                 # {"fed-yogi", "fed-prox", "fed-avg"}, "fed-avg" by default
    - eval_interval: 50                     # How many rounds to run a testing on the testing set
    - rounds: 501                          # Number of rounds to run this training. We use 1000 in our paper, while it may converge w/ ~400 rounds
    - filter_less: 21                       # Remove clients w/ less than 21 samples
    - num_loaders: 4
    - yogi_eta: 3e-3 
    - yogi_tau: 1e-8
    - local_steps: 5
    - learning_rate: 0.05
    - batch_size: 20
    - test_bsz: 20
    - use_cuda: True
    - mode: 'FLOAT'
    - task: speech
    - total_worker: 30                      # Number of participants per round, we use K=100 in our paper, large K will be much slower
    - sample_mode: "random"
    - use_wandb: 1
    - last_worker: 0
    - partitioning: 4
    - dirichlet_alpha: 0.1
    - zipf_param: 1.95
    - filter_class_ratio: 0.4
    - total_clients: 200
    - send_delta: 0
    - model_boost: 0
    - stale_all: 0
    - adapt_selection: 1
    - val_ratio: 0.001
    - bandwidth_profiles_dir: $FEDSCALE_HOME/benchmark/dataset/data/device_info/client_device_traces.csv #Farz - path of client trace for dynamic networks
